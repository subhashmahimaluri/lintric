version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: lintric-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: lintric
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d lintric"]
      interval: 5s
      timeout: 3s
      retries: 10

  dynamodb:
    image: amazon/dynamodb-local:latest
    container_name: lintric-dynamodb
    restart: unless-stopped
    command: ["-jar", "DynamoDBLocal.jar", "-sharedDb", "-dbPath", "/home/dynamodblocal/data"]
    ports:
      - "8000:8000"
    volumes:
      - dynamo_data:/home/dynamodblocal/data
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://localhost:8000/shell/ 1>/dev/null 2>&1 || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: lintric-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  # Optional: Local AWS emulation for S3/SQS during local dev.
  # Comment out if you prefer hitting real AWS.
  localstack:
    image: localstack/localstack:latest
    container_name: lintric-localstack
    restart: unless-stopped
    environment:
      - SERVICES=s3,sqs
      - AWS_DEFAULT_REGION=us-east-1
      - DEBUG=0
      - LS_LOG=warning
    ports:
      - "4566:4566"
    volumes:
      - localstack_data:/var/lib/localstack
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:4566/_localstack/health | grep '\"initialized\": true' >/dev/null || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 12

volumes:
  pg_data:
  dynamo_data:
  redis_data:
  localstack_data: